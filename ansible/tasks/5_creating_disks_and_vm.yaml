---
- name: creating disks and vms
  hosts: all
  vars_files:
    - templates/cluster_info_variables.yaml
  tasks:
    - name: Delete content & directory of ocp-install
      ansible.builtin.file:
        state: absent
        path: ~/ocp-install
    - name: Create a directory ocp-install if it does not exist
      ansible.builtin.file:
        path: ~/ocp-install
        state: directory
    - name: copy configfile install-config.yaml
      ansible.builtin.template:
        src: "templates/install_config.j2"
        dest: "~/ocp-install/install-config.yaml"
    - name: create ignition files
      ansible.builtin.shell:
        chdir: ~/ocp-install
        cmd: openshift-install create ignition-configs
    - name: Remove any exisiting ignition files (from a previous install attempt), copy the files to the matchbox location, and set the permissions to read.
      ansible.builtin.shell:
        chdir: ~/ocp-install
        cmd: rm -f /var/lib/matchbox/ignition/*.ign && cp *.ign /var/lib/matchbox/ignition/ && chmod +r /var/lib/matchbox/ignition/*
    - name: restart matchbox
      ansible.builtin.systemd:
        name: matchbox
        daemon_reload: true
        state: restarted
    - name: restart dnsmasq
      ansible.builtin.systemd:
        name: dnsmasq
        daemon_reload: true
        state: restarted
    - name: restart haproxy
      ansible.builtin.systemd:
        name: haproxy
        daemon_reload: true
        state: restarted
    - name: creating all disks
      loop: "{{cluster_info_variables}}"
      block:
        - name: create disks for non worker nodes
          shell: "virsh vol-create-as default {{item.name}}.qcow2 {{item.disk_size}}G"
          when: item.type!='worker'
        - name: create disks for  worker nodes
          shell: "virsh vol-create-as default {{item.name}}.qcow2 {{item.disk_size}}G && virsh vol-create-as default {{item.name}}c.qcow2 {{item.disk_size_c}}G"
          when: item.type=='worker'
    - name: creating all vms
      loop: "{{cluster_info_variables}}"
      block:
        - name: create vms for non worker nodes
          shell: "virt-install --name={{item.name}} --ram={{item.ram}} --vcpus={{item.vcpu}} --mac={{item.mac_address}}  --disk path=/var/lib/libvirt/images/{{item.name}}.qcow2,bus=virtio,size={{item.disk_size}}   --pxe --noautoconsole --graphics=vnc --hvm   --network network=ocp,model=virtio --os-variant fedora-coreos-stable --boot hd,network"
          when: item.type!='worker'
        - name: create disks for  worker nodes
          shell: "virt-install --name={{item.name}} --ram={{item.ram}} --vcpus={{item.vcpu}} --mac={{item.mac_address}}  --disk path=/var/lib/libvirt/images/mac_address.qcow2,bus=virtio,size={{item.disk_size}} --disk path=/var/lib/libvirt/images/{{item.disk_name}}c.qcow2,bus=virtio   --pxe --noautoconsole --graphics=vnc --hvm   --network network=ocp,model=virtio --os-variant fedora-coreos-stable --boot hd,network"
          when: item.type=='worker'
    - name: Sleep for 250 seconds and continue with play
      ansible.builtin.wait_for:
        timeout: 250